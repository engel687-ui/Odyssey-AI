import{b as r}from"./index-CiyJRU5p.js";class c{static async createPersonalizedMap(t,e){const i=`tour_${Date.now()}`,n=this.getOptimalLocations(t),a=await this.generateTourDescription(t),o={id:i,userId:e?.id||"anonymous",title:this.generateTourTitle(t),description:a,startLocation:n.start,endLocation:n.end,durationDays:this.calculateDuration(t),preferences:JSON.stringify(t),routeData:JSON.stringify({}),createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},s=await this.generateIntelligentRouteStops(i,t,n);return await r.db.tours.create(o),await r.db.routeStops.createMany(s),{tour:o,routeStops:s}}static getOptimalLocations(t){const e={nature:{start:"Seattle, WA",end:"San Diego, CA"},culture:{start:"San Francisco, CA",end:"Los Angeles, CA"},adventure:{start:"Denver, CO",end:"Las Vegas, NV"},food:{start:"Portland, OR",end:"San Francisco, CA"},default:{start:"San Francisco, CA",end:"Los Angeles, CA"}};t.interests[0];const i=Object.keys(e).find(n=>t.interests.includes(n))||"default";return e[i]||e.default}static generateTourTitle(t){const e={electric:"Eco-Friendly",gas:"Classic",hybrid:"Efficient",rv:"Luxury",motorcycle:"Thrilling"},i={adventure:"Adventure",luxury:"Luxury",camping:"Wilderness",cultural:"Cultural",food:"Culinary",budget:"Budget"},n=e[t.vehicleType]||"Personalized",a=t.travelStyles[0]&&i[t.travelStyles[0]]||"Custom";return`${t.name}'s ${n} ${a} Journey`}static calculateDuration(t){return t.budget<100?3:t.budget>500?7:t.travelStyles.includes("adventure")?5:t.travelStyles.includes("camping")?6:4}static async generateTourDescription(t){try{const{text:e}=await r.ai.generateText({prompt:`Create an engaging travel itinerary description for ${t.name}'s personalized trip:
        
        Profile:
        - Vehicle: ${t.vehicleType}
        - Budget: $${t.budget}/day (${t.budgetLabel})
        - Accommodation: ${t.accommodationType}
        - Travel Styles: ${t.travelStyles.join(", ")}
        - Interests: ${t.interests.join(", ")}
        
        Write a compelling 2-3 paragraph description that:
        1. Captures the excitement of the journey
        2. Highlights vehicle-specific advantages
        3. Mentions accommodation style
        4. References their interests and budget level
        
        Make it personal and inspiring!`,maxTokens:400});return e}catch(e){return console.error("Failed to generate tour description:",e),this.getFallbackDescription(t)}}static getFallbackDescription(t){return`Embark on ${t.name}'s personalized ${t.budgetLabel.toLowerCase()} adventure with your ${t.vehicleType} vehicle. This carefully crafted journey combines ${t.interests.join(", ")} experiences with ${t.accommodationType.replace("_","/")} accommodations that match your ${t.travelStyles.join(" and ")} travel style. Every stop is optimized for your vehicle type and budget, ensuring an unforgettable road trip experience.`}static async generateIntelligentRouteStops(t,e,i){try{const{object:n}=await r.ai.generateObject({prompt:`Generate a detailed route from ${i.start} to ${i.end} for:
        
        Vehicle: ${e.vehicleType}
        Budget: $${e.budget}/day (${e.budgetLabel})
        Accommodation: ${e.accommodationType}
        Interests: ${e.interests.join(", ")}
        Travel Style: ${e.travelStyles.join(", ")}
        
        Create 5-7 stops with:
        - Vehicle-appropriate service stops (charging for EV, gas stations for gas vehicles, RV parks for RVs)
        - Points of interest matching their interests
        - Accommodations matching their preference and budget
        - Real GPS coordinates for the route
        - Appropriate amenities for each stop type`,schema:{type:"object",properties:{stops:{type:"array",items:{type:"object",properties:{type:{type:"string",enum:["poi","charging","accommodation","service"]},name:{type:"string"},description:{type:"string"},latitude:{type:"number"},longitude:{type:"number"},stopOrder:{type:"number"},amenities:{type:"array",items:{type:"string"}}},required:["type","name","description","latitude","longitude","stopOrder","amenities"]}}},required:["stops"]}});return n.stops.map((a,o)=>({id:`stop_${Date.now()}_${o}`,tourId:t,type:a.type,name:a.name,description:a.description,latitude:a.latitude,longitude:a.longitude,stopOrder:a.stopOrder,amenities:JSON.stringify(a.amenities),createdAt:new Date().toISOString()}))}catch(n){return console.error("Failed to generate intelligent route stops:",n),this.getFallbackRouteStops(t,e)}}static getFallbackRouteStops(t,e){const i=[];i.push({type:"poi",name:"Golden Gate Bridge",description:"Iconic starting point with breathtaking views",latitude:37.8199,longitude:-122.4783,stopOrder:1,amenities:JSON.stringify(["Photography","Walking","Scenic Views"])}),e.vehicleType==="electric"?i.push({type:"charging",name:"Tesla Supercharger - Gilroy",description:"Fast EV charging with shopping options",latitude:37.0058,longitude:-121.5683,stopOrder:2,amenities:JSON.stringify(["Fast Charging","Shopping","Restaurants","WiFi"])}):e.vehicleType==="rv"?i.push({type:"service",name:"RV Service Center - Salinas",description:"Full RV services and supplies",latitude:36.6777,longitude:-121.6555,stopOrder:2,amenities:JSON.stringify(["RV Services","Supplies","Dump Station","Fuel"])}):e.vehicleType==="motorcycle"?i.push({type:"service",name:"Motorcycle Rest Area - Monterey",description:"Scenic rest stop with motorcycle parking",latitude:36.6002,longitude:-121.8947,stopOrder:2,amenities:JSON.stringify(["Motorcycle Parking","Scenic Views","Restrooms","Food"])}):i.push({type:"service",name:"Highway Rest Area - Gilroy",description:"Convenient fuel and refreshment stop",latitude:37.0058,longitude:-121.5683,stopOrder:2,amenities:JSON.stringify(["Gas Station","Convenience Store","Restrooms"])}),e.interests.includes("nature")?i.push({type:"poi",name:"Big Sur National Forest",description:"Stunning coastal redwood forests and hiking trails",latitude:36.2704,longitude:-121.8081,stopOrder:3,amenities:JSON.stringify(["Hiking","Wildlife Viewing","Photography","Nature Trails"])}):e.interests.includes("art")?i.push({type:"poi",name:"Hearst Castle",description:"Historic art collection and architecture",latitude:35.685,longitude:-121.1681,stopOrder:3,amenities:JSON.stringify(["Art Gallery","Historic Tours","Architecture","Gardens"])}):e.interests.includes("food")?i.push({type:"poi",name:"Paso Robles Wine Country",description:"World-class wineries and farm-to-table dining",latitude:35.6269,longitude:-120.6906,stopOrder:3,amenities:JSON.stringify(["Wine Tasting","Fine Dining","Local Produce","Vineyard Tours"])}):i.push({type:"poi",name:"Monterey Bay Aquarium",description:"World-renowned marine life exhibits",latitude:36.6182,longitude:-121.9016,stopOrder:3,amenities:JSON.stringify(["Aquarium","Education","Family Friendly","Gift Shop"])});let n;return e.accommodationType==="camping_rv"?n={type:"accommodation",name:"Hearst San Simeon State Park",description:e.budget<100?"Budget-friendly campground":"Premium camping with ocean views",latitude:35.644,longitude:-121.1905,stopOrder:4,amenities:JSON.stringify(["Camping","RV Sites","Showers","Beach Access","Fire Pits"])}:e.accommodationType==="hostels"?n={type:"accommodation",name:"HI Monterey Hostel",description:"Social accommodation with shared amenities",latitude:36.6002,longitude:-121.8947,stopOrder:4,amenities:JSON.stringify(["Shared Kitchen","Common Areas","WiFi","Laundry","Bicycle Storage"])}:e.budget>400?n={type:"accommodation",name:"Luxury Resort & Spa - Santa Barbara",description:"Premium accommodation with full amenities",latitude:34.4208,longitude:-119.6982,stopOrder:4,amenities:JSON.stringify(["Spa","Fine Dining","Pool","Ocean View","Concierge","EV Charging"])}:n={type:"accommodation",name:"Comfort Inn - San Luis Obispo",description:"Comfortable mid-range accommodation",latitude:35.2828,longitude:-120.6596,stopOrder:4,amenities:JSON.stringify(["WiFi","Breakfast","Pool","Parking","Fitness Center"])},i.push(n),i.push({type:"poi",name:"Santa Monica Pier",description:"Iconic pier with entertainment and dining",latitude:34.0089,longitude:-118.4973,stopOrder:5,amenities:JSON.stringify(["Amusement Park","Dining","Shopping","Beach Access","Entertainment"])}),i.map((a,o)=>({id:`stop_${Date.now()}_${o}`,tourId:t,type:a.type,name:a.name,description:a.description,latitude:a.latitude,longitude:a.longitude,stopOrder:a.stopOrder,amenities:a.amenities,createdAt:new Date().toISOString()}))}}export{c as MapGenerator};
